#!/bin/bash
### BEGIN INIT INFO
# Provides:          aria2
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable aria2c by daemon.
### END INIT INFO
PATH=/usr/sbin:/usr/bin:/usr/local/bin:/usr/local/sbin:/sbin:/bin
DAEMON=aria2c
ROOTARIA=/etc/aria2
WORKPATH=/usr/share/nginx/www

[ -z "$(which $DAEMON)" ] && echo "Not found aria2c! " && exit 1

case "$1" in
start)
[ -n "$(pgrep 'aria2c')" ] && echo "aria2c already in run [$(pgrep 'aria2c')]." && exit 0
iptables -A INPUT -p tcp --dport 6800 -j ACCEPT
iptables -A INPUT -p tcp --dport 6881:6999 -j ACCEPT
iptables -A INPUT -p udp --dport 6881:6999 -j ACCEPT
iptables -A OUTPUT -p tcp --dport 6800 -j ACCEPT
iptables -A OUTPUT -p tcp --dport 6881:6999 -j ACCEPT
iptables -A OUTPUT -p udp --dport 6881:6999 -j ACCEPT
sleep 1
$DAEMON --conf-path=$ROOTARIA/aria2c.conf -D
[ -n "$(pgrep 'aria2c')" ] && echo "aria2c START Success [$(pgrep 'aria2c')]! " && exit 0
[ -z "$(pgrep 'aria2c')" ] && echo "aria2c START Fail! " && exit 1
;;
stop)
[ -z "$(pgrep 'aria2c')" ] && echo "aria2c not work ." && exit 1
killall -q -9 aria2c >/dev/null 2>&1
[ -z "$(pgrep 'aria2c')" ] && echo "aria2c STOP Success." && exit 0
[ -n "$(pgrep 'aria2c')" ] && echo "aria2c STOP Fail." && exit 1
;;
restart)
killall -q -9 aria2c >/dev/null 2>&1
$0 start;
;;
*)
echo "Usage: aria2c {start|stop|restart}"
exit 1
esac
exit 0
 
